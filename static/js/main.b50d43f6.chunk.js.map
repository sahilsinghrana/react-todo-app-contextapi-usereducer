{"version":3,"sources":["context/todo-context.js","TodoItem.js","Todos.js","TodoInput.js","context/todo-actions.js","context/todoReducer.js","context/TodoState.js","App.js","reportWebVitals.js","index.js"],"names":["todoContext","createContext","TodoItem","todo","deleteTodo","toggleTodo","style","padding","display","justifyContent","borderBottom","textDecoration","completed","name","Button","variant","size","marginRight","onClick","_id","Todo","useContext","TodoContext","todos","addTodo","textAlign","background","boxShadow","map","TodoInput","useState","input","setInput","type","placeholder","value","onChange","e","target","width","preventDefault","newTodo","Math","random","length","ADD_TODO","DELETE_TODO","TOGGLE_TODO","todoReducer","state","action","payload","filter","TodoState","props","useReducer","dispatch","Provider","message","todoId","children","App","className","CardGroup","flexDirection","margin","Card","bg","text","maxHeight","marginBottom","Body","Title","Header","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAIeA,EAFKC,0B,QCCL,SAASC,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WACnD,OACE,qBAAIC,MAAO,CAACC,QAAQ,UAAUC,QAAQ,OAAQC,eAAe,gBAAiBC,aAAc,uBAA5F,UACE,sBAAMJ,MAAO,CAACK,eAAgBR,EAAKS,UAAY,eAAiB,QAAhE,SAA0ET,EAAKU,OAC/E,gCACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAWC,KAAK,KAAKV,MAAO,CAACW,YAAa,QACxDC,QAAU,kBAAMb,EAAWF,EAAKgB,MADlC,oBAGA,cAACL,EAAA,EAAD,CAAQC,QAAQ,SAASC,KAAK,KAC5BE,QAAS,kBAAMd,EAAWD,EAAKgB,MADjC,0BCRS,SAASC,IAAS,IAAD,EACkBC,qBAAWC,GAAnDC,EADsB,EACtBA,MAAOC,EADe,EACfA,QAAQnB,EADO,EACPA,WAAWD,EADJ,EACIA,WAElC,OACE,oBAAIE,MAAO,CAACmB,UAAU,SAAUC,WAAY,UAAWnB,QAAQ,WAAYoB,UAAU,wBAArF,SAEGJ,EAAMK,KAAI,SAAAzB,GACT,OACE,cAACD,EAAD,CAAyBC,KAAMA,EAAMqB,QAASA,EAASnB,WAAYA,EAAYD,WAAYA,GAA5ED,EAAKgB,U,YC2BfU,EAlCG,WAAO,IAChBL,EAAWH,qBAAWC,GAAtBE,QADe,EAEIM,mBAAS,IAFb,mBAEfC,EAFe,KAERC,EAFQ,KAmBtB,OACE,qCACA,uBACEC,KAAK,OACLC,YAAY,kBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOH,QACnC7B,MAAO,CAACiC,MAAM,UAEhB,cAACzB,EAAA,EAAD,CAAQC,QAAQ,YAAYG,QAxBV,SAACmB,GACnBA,EAAEG,iBACF,IAAIC,EAAQ,CACVtB,IAAIuB,KAAKC,SACT9B,KAAMkB,EACNnB,WAAW,GAEVmB,EAAMa,OAAS,IAEhBpB,EAAQiB,GAERT,EAAS,MAaX,2B,6BChCEa,EAAW,WACXC,EAAc,cACdC,EAAc,cCuBLC,EAtBK,SAACC,EAAOC,GAC1B,OAAOA,EAAOjB,MACZ,KAAKY,EACH,OAAO,2BACFI,GADL,IAEE1B,MAAM,GAAD,mBAAM0B,EAAM1B,OAAZ,CAAmB2B,EAAOC,YAEnC,KAAKL,EACH,OAAO,2BACFG,GADL,IAEE1B,MAAO0B,EAAM1B,MAAM6B,QAAO,SAAAjD,GAAI,OAAIA,EAAKgB,MAAQ+B,EAAOC,aAE1D,KAAKJ,EACH,kCACKE,GADL,IAEE1B,MAAO0B,EAAM1B,MAAMK,KAAI,SAAAzB,GAAI,OAAIA,EAAKgB,MAAQ+B,EAAOC,QAApB,2BAAkChD,GAAlC,IAAwCS,WAAYT,EAAKS,YAAaT,OAEzG,QACE,OAAO8C,ICiBEI,MAjCf,SAAmBC,GACjB,IADwB,EAIEC,qBAAWP,EAHhB,CACnBzB,MAAO,KAFe,mBAIjB0B,EAJiB,KAIVO,EAJU,KAmB1B,OACI,cAAC,EAAYC,SAAb,CAAsBtB,MAAO,CAC3BuB,QAAS,qBACTnC,MAAO0B,EAAM1B,MACbC,QAjBY,SAACrB,GAEfqD,EAAS,CAACvB,KAAMY,EAAUM,QAAQhD,KAgBhCC,WATe,SAACuD,GAClBH,EAAS,CAACvB,KAAKa,EAAaK,QAAQQ,KASlCtD,WAde,SAACsD,GAClBH,EAAS,CAACvB,KAAKc,EAAaI,QAAQQ,MAQpC,SAOCL,EAAMM,YCIIC,MA3Bf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,UACA,eAACC,EAAA,EAAD,CAAWzD,MAAO,CAACE,QAAS,OAAQwD,cAAe,SAAUC,OAAO,GAApE,UACA,cAACC,EAAA,EAAD,CAAMJ,UAAU,OAAOK,GAAG,OAAOC,KAAK,QAAQ9D,MAAO,CAAC+D,UAAW,QAAQC,aAAa,EAAG7D,eAAgB,SAAS8B,MAAO,SAAzH,SACE,eAAC2B,EAAA,EAAKK,KAAN,WACM,cAACL,EAAA,EAAKM,MAAN,uBACE,cAACN,EAAA,EAAKO,OAAN,yBACA,cAAC,EAAD,SAGV,cAACP,EAAA,EAAD,CAAMJ,UAAU,OAAOK,GAAG,OAAOC,KAAK,QAAQ9D,MAAO,CAACG,eAAgB,SAAS8B,MAAO,SAAtF,SACE,eAAC2B,EAAA,EAAKK,KAAN,WACQ,cAACL,EAAA,EAAKO,OAAN,oBACA,cAACrD,EAAD,SAIV,cAACsD,EAAA,EAAD,CAAQ3D,QAAQ,UAAhB,0HCjBS4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b50d43f6.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst todoContext = createContext();\r\n\r\nexport default todoContext;\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function TodoItem ({todo, deleteTodo, toggleTodo}) {\r\n  return (\r\n    <li style={{padding:'5px 6px',display:\"flex\", justifyContent:\"space-between\", borderBottom: \"1.5px solid #395be0\"}}>\r\n      <span style={{textDecoration: todo.completed ? 'line-through' : 'none'}}>{todo.name}</span>\r\n      <div>\r\n      <Button variant=\"success\"  size=\"sm\" style={{marginRight: '1rem'}}\r\n        onClick={(() => toggleTodo(todo._id))}\r\n      >Toggle</Button>\r\n      <Button variant=\"danger\" size=\"sm\"\r\n        onClick={() => deleteTodo(todo._id)}\r\n      >Delete</Button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport TodoContext from './context/todo-context'\r\nimport TodoItem from './TodoItem'\r\nexport default function Todo () {\r\n  const { todos, addTodo,toggleTodo,deleteTodo} = useContext(TodoContext)\r\n\r\n  return (\r\n    <ul style={{textAlign:'center', background: \"#00BFFF\", padding:\"10px 2px\", boxShadow:\"3px 8px 20px #222233\" }}>\r\n\r\n      {todos.map(todo => {\r\n        return(\r\n          <TodoItem key={todo._id} todo={todo} addTodo={addTodo} toggleTodo={toggleTodo} deleteTodo={deleteTodo} />\r\n        )\r\n      })}\r\n\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport TodoContext from './context/todo-context';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst TodoInput = () => {\r\n  const {addTodo} = useContext(TodoContext);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    let newTodo={\r\n      _id:Math.random(),\r\n      name: input,\r\n      completed: false\r\n    }\r\n    if(input.length > 0 ){\r\n      // console.log(newTodo);\r\n      addTodo(newTodo);\r\n\r\n      setInput('');\r\n\r\n    }\r\n  }\r\n  return(\r\n    <>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Enter Something\"\r\n      value={input}\r\n      onChange={(e) => setInput(e.target.value)}\r\n      style={{width:\"100%\"}}\r\n      />\r\n    <Button variant=\"secondary\" onClick={handleClick}>Make Todo</Button>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default TodoInput;\r\n","const ADD_TODO = 'ADD_TODO'\r\nconst DELETE_TODO = 'DELETE_TODO'\r\nconst TOGGLE_TODO = 'TOGGLE_TODO'\r\n\r\nexport  {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO\r\n}\r\n","\r\nimport {ADD_TODO, TOGGLE_TODO, DELETE_TODO} from './todo-actions.js'\r\n\r\nconst todoReducer = (state, action ) => {\r\n  switch(action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload]\r\n      }\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo._id !== action.payload)\r\n      }\r\n    case TOGGLE_TODO:\r\n      return{\r\n        ...state,\r\n        todos: state.todos.map(todo => todo._id === action.payload ? {...todo, completed: !todo.completed} : todo)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoReducer;\r\n","import React, {useReducer} from 'react';\r\nimport TodoContext from './todo-context';\r\nimport todoReducer from './todoReducer'\r\nimport {ADD_TODO, DELETE_TODO, TOGGLE_TODO} from './todo-actions'\r\n\r\nfunction TodoState(props) {\r\n  const initialState = {\r\n    todos: []\r\n  }\r\n  const [state, dispatch] = useReducer(todoReducer, initialState);\r\n\r\n  const addTodo = (todo) => {\r\n\r\n    dispatch({type: ADD_TODO, payload:todo})\r\n  }\r\n\r\n  const toggleTodo = (todoId) => {\r\n    dispatch({type:TOGGLE_TODO, payload:todoId})\r\n  }\r\n\r\n  const deleteTodo = (todoId) => {\r\n    dispatch({type:DELETE_TODO, payload:todoId})\r\n  }\r\n\r\nreturn (\r\n    <TodoContext.Provider value={{\r\n      message: \"Hello from context\",\r\n      todos: state.todos,\r\n      addTodo,\r\n      deleteTodo,\r\n      toggleTodo\r\n    }}>\r\n    {props.children}\r\n\r\n    </TodoContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TodoState;\r\n","import React from 'react';\nimport { Card,CardGroup,Alert} from 'react-bootstrap';\nimport Todos from './Todos';\nimport TodoInput from './TodoInput';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css';\n\nimport TodoState from './context/TodoState'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <TodoState>\n      <CardGroup style={{display: \"flex\", flexDirection: 'column', margin:0}}>\n      <Card className=\"mb-2\" bg=\"info\" text='white' style={{maxHeight: \"12rem\",marginBottom:0, justifyContent: \"center\",width: \"50rem\"}}>\n        <Card.Body>\n              <Card.Title>Todo App</Card.Title>\n                <Card.Header>Todo Input</Card.Header>\n                <TodoInput />\n        </Card.Body>\n      </Card>\n      <Card className=\"mb-2\" bg=\"info\" text='white' style={{justifyContent: \"center\",width: \"50rem\"}}>\n        <Card.Body>\n                <Card.Header>Todos</Card.Header>\n                <Todos />\n\n        </Card.Body>\n      </Card>\n      <Alert  variant='warning'>This is a non-responsive project just to learn Context API and useReducer Hook together ðŸ˜Š</Alert>\n      </CardGroup>\n      </TodoState>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}